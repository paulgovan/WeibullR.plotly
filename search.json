[{"path":"https://paulgovan.github.io/WeibullR.plotly/ReadMe.html","id":"weibullrplotly","dir":"","previous_headings":"","what":"WeibullR.plotly","title":"NA","text":"WeibullR.plotly simple R package building interactive Weibull Probability Plots. package depends WeibullR, R package Weibull analysis, plotly, interactive web-based graphing library.","code":""},{"path":"https://paulgovan.github.io/WeibullR.plotly/ReadMe.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"NA","text":"WeibullR.plotly still development. install developmental version R:","code":"devtools::install_github('paulgovan/weibullr.plotly')"},{"path":"https://paulgovan.github.io/WeibullR.plotly/ReadMe.html","id":"basic-examples","dir":"","previous_headings":"","what":"Basic Examples","title":"NA","text":"build probability plot, first fit wblr object using WeibullR package use plotly_wblr build plot.  build contour plot, use plotly_contour function. Note contour plots available method.fit='mle' method.conf='lrb'.","code":"library(WeibullR) library(WeibullR.plotly) failures<-c(30, 49, 82, 90, 96) obj<-wblr.conf(wblr.fit(wblr(failures))) plotly_wblr(obj) obj<-wblr.conf(wblr.fit(wblr(failures), method.fit = 'mle'), method.conf = 'lrb') plotly_contour(obj)"},{"path":"https://paulgovan.github.io/WeibullR.plotly/ReadMe.html","id":"customization","dir":"","previous_headings":"","what":"Customization","title":"NA","text":"WeibullR.plotly several customization options.","code":"plotly_wblr(obj, main='Weibull Probability Plot', xlab='Years', ylab='Failure Probability', col='blue', signif=4, grid=FALSE) plotly_contour(obj, main='Weibull Contour Plot', col='red', signif=4, grid=FALSE)"},{"path":"https://paulgovan.github.io/WeibullR.plotly/ReadMe.html","id":"more-resources","dir":"","previous_headings":"","what":"More Resources","title":"NA","text":"interactive introduction Life Data Analysis, check WeibullR.learnr try WeibullR.plotly Shiny app, check WeibullR.shiny","code":""},{"path":"https://paulgovan.github.io/WeibullR.plotly/articles/OtherExamples.html","id":"a-basic-example","dir":"Articles","previous_headings":"","what":"A basic example","title":"Other Examples","text":"","code":"failures <- c(30, 49, 82, 90, 96) suspensions <- c(100, 45, 10) wblr_obj <- wblr.conf(wblr.fit(wblr(failures, suspensions))) plotly_wblr(wblr_obj, susp=suspensions)"},{"path":"https://paulgovan.github.io/WeibullR.plotly/articles/OtherExamples.html","id":"contour-challenge","dir":"Articles","previous_headings":"","what":"Contour challenge","title":"Other Examples","text":"","code":"daf<-read.csv(\"https://raw.githubusercontent.com/openrelia/WeibullR.gallery/master/data/contour_challenge/daTEST.csv\", header=FALSE) das<-read.csv(\"https://raw.githubusercontent.com/openrelia/WeibullR.gallery/master/data/contour_challenge/dasuspendedTEST.csv\", header=FALSE)  fdf <- as.data.frame(table(daf[,1])) ft <- as.numeric(levels(fdf[,1])) fq <- fdf[,2] sdf <- as.data.frame(table(das[,1])) st <- as.numeric(levels(sdf[,1])) sq <- sdf[,2] fail_edata <- data.frame(time=ft, event=rep(1,length(ft)), qty=fq) sus_edata <- data.frame(time=st, event=rep(0, length(st)), qty=sq) teq_frame <- rbind(fail_edata, sus_edata) obj <- wblr.conf(wblr.fit(wblr(teq_frame), method.fit='mle'), method.conf='lrb') plotly_contour(obj, main='')"},{"path":"https://paulgovan.github.io/WeibullR.plotly/articles/OtherExamples.html","id":"figure-3-13-from-the-new-weibull-handbook","dir":"Articles","previous_headings":"","what":"Figure 3.13 from “The New Weibull Handbook”","title":"Other Examples","text":"","code":"F3.13da <- read.csv(\"https://raw.githubusercontent.com/openrelia/WeibullR.gallery/master/data/Figure3.13.csv\", header=T)$F3.13da F3.13ln2 <- wblr.conf(wblr.fit(wblr(F3.13da,label=\"Figure3.13\"),                      dist=\"lognormal\",col=\"magenta\")) plotly_wblr(F3.13ln2, col='magenta', main='Lognormal Plot')"},{"path":"https://paulgovan.github.io/WeibullR.plotly/articles/OtherExamples.html","id":"bathtub-life-data","dir":"Articles","previous_headings":"","what":"Bathtub life data","title":"Other Examples","text":"","code":"agc <- read.csv(\"https://raw.githubusercontent.com/openrelia/WeibullR.gallery/master/data/acid_gas_compressor.csv\", header=T)$agc dafit <- wblr(agc, label=\"acid gas compressor\") dafit <- wblr.conf(wblr.fit(dafit,col=\"red\")) plotly_wblr(dafit, col=\"red\", main='Bathtub Life Data')"},{"path":"https://paulgovan.github.io/WeibullR.plotly/articles/OtherExamples.html","id":"example-from-wayne-nelson-in-applied-life-data-analysis-1982-page415","dir":"Articles","previous_headings":"","what":"Example from Wayne Nelson in “Applied Life Data Analysis” (1982), page415","title":"Other Examples","text":"","code":"# inspection time time <- c(6.12, 19.92, 29.64, 35.4, 39.72, 45.24,52.32, 63.48) # quantity of newly identified cracked parts         qty <- c(5, 16, 12, 18, 18, 2, 6, 17)        x <- data.frame(time, qty)       # a single population of parts inspected over time # quantity in service (qis)      qis = 167        # must prepare a mixed input for intervals with no failure data      left <- c(0, x$time[-nrow(x)])   right <- x$time  suspensionDF <- data.frame(time=max(x$time), event=0, qty=qis-sum(x$qty))    obj <- wblr(x=suspensionDF, interval=data.frame(left, right, qty=x$qty),           interval.lty=\"dashed\", interval.lwd=1, interval.col=\"blue\" )    obj <- wblr.fit(obj, method.fit=\"mle\", col=\"red\") obj <- wblr.conf(obj, method.conf=\"fm\", ci=.95, lty=2, lwd=1) obj <- wblr.conf(obj, method.conf=\"lrb\", ci=.95, lty=2, lwd=1, col=\"green\") suspensions <- as.vector(suspensionDF$time) plotly_wblr(obj, susp=suspensions, col='red', main='Parts Cracking Inspection Interval Analysis',              ylab='Cumulative % Cracked', xlab='Inspection Time', intcol='blue')"},{"path":"https://paulgovan.github.io/WeibullR.plotly/articles/OtherExamples.html","id":"comparing-the-simple-weibayes-function-to-a-challenging-mle-contour","dir":"Articles","previous_headings":"","what":"Comparing the Simple Weibayes Function to a Challenging MLE Contour","title":"Other Examples","text":"","code":"daf <- read.csv(\"https://raw.githubusercontent.com/openrelia/WeibullR.gallery/master/data/contour_challenge/daTEST.csv\", header=FALSE) das <- read.csv(\"https://raw.githubusercontent.com/openrelia/WeibullR.gallery/master/data/contour_challenge/dasuspendedTEST.csv\", header=FALSE) fdf <- as.data.frame(table(daf[,1])) ft <- as.numeric(levels(fdf[,1])) fq <- fdf[,2] sdf <- as.data.frame(table(das[,1])) st <- as.numeric(levels(sdf[,1])) sq <- sdf[,2] fail_edata <- data.frame(time=ft, event=rep(1,length(ft)), qty=fq) sus_edata <- data.frame(time=st, event=rep(0, length(st)), qty=sq) teq_frame <- rbind(fail_edata, sus_edata) obj <- wblr.conf(wblr.fit(wblr(teq_frame), method.fit='mle'), method.conf='lrb') plotly_contour(obj, col='blue', main='')"},{"path":"https://paulgovan.github.io/WeibullR.plotly/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paul Govan. Author, maintainer.","code":""},{"path":"https://paulgovan.github.io/WeibullR.plotly/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Govan P (2023). WeibullR.plotly: Interactive Weibull Probability Plots WeibullR plotly. R package version 0.1.0, https://paulgovan.github.io/WeibullR.plotly/.","code":"@Manual{,   title = {WeibullR.plotly: Interactive Weibull Probability Plots with WeibullR and plotly},   author = {Paul Govan},   year = {2023},   note = {R package version 0.1.0},   url = {https://paulgovan.github.io/WeibullR.plotly/}, }"},{"path":"https://paulgovan.github.io/WeibullR.plotly/index.html","id":"weibullrplotly","dir":"","previous_headings":"","what":"WeibullR.plotly","title":"Interactive Weibull Probability Plots with WeibullR and plotly","text":"WeibullR.plotly simple R package building interactive Weibull Probability Plots. package depends WeibullR, R package Weibull analysis, plotly, interactive web-based graphing library.","code":""},{"path":"https://paulgovan.github.io/WeibullR.plotly/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Interactive Weibull Probability Plots with WeibullR and plotly","text":"WeibullR.plotly still development. install developmental version R:","code":"devtools::install_github('paulgovan/weibullr.plotly')"},{"path":"https://paulgovan.github.io/WeibullR.plotly/index.html","id":"basic-examples","dir":"","previous_headings":"","what":"Basic Examples","title":"Interactive Weibull Probability Plots with WeibullR and plotly","text":"build probability plot, first fit wblr object using WeibullR package use plotly_wblr build plot.  build contour plot, use plotly_contour function. Note contour plots available method.fit='mle' method.conf='lrb'.","code":"library(WeibullR) library(WeibullR.plotly) failures<-c(30, 49, 82, 90, 96) obj<-wblr.conf(wblr.fit(wblr(failures))) plotly_wblr(obj) obj<-wblr.conf(wblr.fit(wblr(failures), method.fit = 'mle'), method.conf = 'lrb') plotly_contour(obj)"},{"path":"https://paulgovan.github.io/WeibullR.plotly/index.html","id":"customization","dir":"","previous_headings":"","what":"Customization","title":"Interactive Weibull Probability Plots with WeibullR and plotly","text":"WeibullR.plotly several customization options.","code":"plotly_wblr(obj, main='Weibull Probability Plot', xlab='Years', ylab='Failure Probability', col='blue', signif=4, grid=FALSE) plotly_contour(obj, main='Weibull Contour Plot', col='red', signif=4, grid=FALSE)"},{"path":"https://paulgovan.github.io/WeibullR.plotly/index.html","id":"more-resources","dir":"","previous_headings":"","what":"More Resources","title":"Interactive Weibull Probability Plots with WeibullR and plotly","text":"interactive introduction Life Data Analysis, check WeibullR.learnr try WeibullR.plotly Shiny app, check WeibullR.shiny","code":""},{"path":[]},{"path":"https://paulgovan.github.io/WeibullR.plotly/news.html","id":"initial-release","dir":"","previous_headings":"","what":"Initial release","title":"WeibullR.plotly v0.1","text":"plotly_wblr function plotly_contour function","code":""},{"path":"https://paulgovan.github.io/WeibullR.plotly/reference/plotly_contour.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive Contour Plot. — plotly_contour","title":"Interactive Contour Plot. — plotly_contour","text":"Interactive Contour Plot.","code":""},{"path":"https://paulgovan.github.io/WeibullR.plotly/reference/plotly_contour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive Contour Plot. — plotly_contour","text":"","code":"plotly_contour(   wblr_obj,   main = NULL,   xlab = NULL,   ylab = NULL,   col = NULL,   signif = NULL,   grid = NULL,   gridcol = NULL )"},{"path":"https://paulgovan.github.io/WeibullR.plotly/reference/plotly_contour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive Contour Plot. — plotly_contour","text":"wblr_obj object class 'wblr'. main Main title. xlab X-axis label. ylab Y-axis label. col Color model fit confidence bounds signif Significant digits results grid Show grid (TRUE) hide grid (FALSE). gridcol Color grid.","code":""},{"path":"https://paulgovan.github.io/WeibullR.plotly/reference/plotly_contour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive Contour Plot. — plotly_contour","text":"","code":"if (FALSE) { failures<-c(30, 49, 82, 90, 96) obj<-wblr.conf(wblr.fit(wblr(failures), method.fit = 'mle'), method.conf = 'lrb') plotly_contour(obj) }"},{"path":"https://paulgovan.github.io/WeibullR.plotly/reference/plotly_wblr.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive Probability Plot. — plotly_wblr","title":"Interactive Probability Plot. — plotly_wblr","text":"Interactive Probability Plot.","code":""},{"path":"https://paulgovan.github.io/WeibullR.plotly/reference/plotly_wblr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive Probability Plot. — plotly_wblr","text":"","code":"plotly_wblr(   wblr_obj,   susp = NULL,   main = NULL,   xlab = NULL,   ylab = NULL,   col = NULL,   signif = NULL,   grid = NULL,   gridcol = NULL,   intcol = NULL )"},{"path":"https://paulgovan.github.io/WeibullR.plotly/reference/plotly_wblr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive Probability Plot. — plotly_wblr","text":"wblr_obj object class 'wblr'. susp optional numeric vector suspension data. main Main title. xlab X-axis label. ylab Y-axis label. col Color model fit confidence bounds signif Significant digits results grid Show grid (TRUE) hide grid (FALSE). gridcol Color grid. intcol Color intervals interval censored models.","code":""},{"path":"https://paulgovan.github.io/WeibullR.plotly/reference/plotly_wblr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive Probability Plot. — plotly_wblr","text":"","code":"if (FALSE) { failures<-c(30, 49, 82, 90, 96) obj<-wblr.conf(wblr.fit(wblr(failures))) plotly_wblr(obj) }"}]
